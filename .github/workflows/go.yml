name: Go CI/CD

on:
  push:
    branches:
      - main
      - '*'
  release:
    types:
      - created

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
          go.mod
          go.sum
          key: ${{ runner.os }}-go-${{ hashFiles('**/*.mod', '**/*.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'

      - name: Install dependencies
        run: go mod tidy

      - name: Run Tests
        run: go test -v ./...

  docker:
    name: Build and Push Docker Image
    needs: test
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract version from release
        id: version
        run: echo "VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

      - name: Build and Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./build/Dockerfile
          push: true
          tags: |
            ilyaksyonov/gotgbot:latest
            ilyaksyonov/gotgbot:${{ env.VERSION }}
